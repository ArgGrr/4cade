;license:MIT
;(c) 2017-2021 by qkumba/4am/John Brooks
;
!cpu 6502
!to "build/DGR.FIZZLE",plain
*=$6000

         ldx   #(end-start)          ; copy LFSR code to zero page
-        ldy   start-1, x
         sty   $FF, x
         dex
         bne   -

         jmp   loop

start
!pseudopc 0 {
         !byte 0
         ;X=0
         ;Y=0
loop     txa
loop1    eor   #$05                  ; LFSR form 0x0500 with period 2047
         ldx   #$80
wait     dex
         bne   wait
         tax
loop2    tya
         and   #$78
         cmp   #$78
         beq   next
         lda   <dst_addrs, x
         sta   <dst+2
         lda   <src_addrs, x
         bmi   aux
         sta   $C004
         bpl   +                     ; always branches
aux      and   #$7F
         sta   $C005
+        sta   <src+2
src      lda   $FD00, y              ; SMC high byte
dst      sta   $FD00, y              ; SMC high byte
next     txa
         lsr
         tax
         tya
         ror
         tay
         bcc   loop2
         bne   loop
         bit   $C000
         bmi   exit
         txa
         bne   loop1
exit     lda   $4400                 ; last lousy byte (because LFSR never hits 0)
         sta   $0400
         sta   $C004
         rts
         ; source data is at $4000-$47FF/main
         ; $4400-$47FF/main -> $0400-$07FF/main
         ; $4000-$43FF/main -> $0400-$07FF/aux
src_addrs
         !byte $44,$45,$46,$47,$C0,$C1,$C2,$C3
dst_addrs
         !byte $04,$05,$06,$07,$04,$05,$06,$07
}
end
